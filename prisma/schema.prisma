datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String     @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  email    String     @unique @db.VarChar(50)
  name     String     @db.VarChar(100)
  googleId String?    @unique
  roles    UserRole[]
  sessions Session[]
  konseli  Konseli?
  konselor Konselor?
  pimpinan Pimpinan?
  tim_konseling TimKonseling?

  @@map("users")
}

model Role {
  id    Int        @id @default(autoincrement()) @db.SmallInt
  name  String     @unique
  users UserRole[]

  @@map("roles")
}

model UserRole {
  userId String
  roleId Int    @db.SmallInt
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
  @@map("user_roles")
}

model Konselor {
  id_konselor   String    @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  userId        String    @unique
  nip           String?   @unique @db.VarChar(25)
  jenis_kelamin String?   @db.Char(1)
  no_hp         String?   @db.VarChar(15)
  tanggal_lahir DateTime? @db.Date
  is_active     Boolean
  
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  jadwal        Jadwal[]
  pengajuans    Pengajuan[] @relation("KonselorPengajuan")
  konselings1   Konseling[] @relation("konselor1")
  konselings2   Konseling[] @relation("konselor2")

  @@map("konselors")
}

model Pimpinan {
  id_pimpinan   String    @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  userId        String    @unique // Tambahkan @unique di sini
  nip           String?   @unique @db.VarChar(25)
  tanggal_lahir DateTime? @db.Date
  is_active     Boolean

  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("pimpinan")
}

model TimKonseling {
  id_tim        String    @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  userId        String    @unique
  nip           String?   @unique @db.VarChar(25)
  tanggal_lahir DateTime? @db.Date
  is_active     Boolean
  
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tim_konseling")
}

model Jadwal {
  id_jadwal    Int       @id @default(autoincrement())
  id_konselor  String
  id_hari      Int       // Foreign key ke Hari
  tanggal      DateTime? @db.Date

  konselor     Konselor  @relation(fields: [id_konselor], references: [id_konselor], onDelete: Cascade)
  hari         Hari      @relation(fields: [id_hari], references: [id_hari], onDelete: Cascade)
  jadwalJam    JadwalJam[]

  @@map("jadwals")
}

model Jam {
  id_jam    Int     @id @default(autoincrement())
  waktu     String  @unique @db.VarChar(12) // Contoh: "09:00-10:00"

  jadwalJam JadwalJam[]
  
  @@map("jam")
}

model Hari {
  id_hari   Int     @id @default(autoincrement())
  nama_hari String  @unique @db.VarChar(10) // Contoh: "Senin", "Selasa"

  jadwals   Jadwal[]
  
  @@map("hari")
}

model JadwalJam {
  id_jadwal   Int
  id_jam      Int

  jadwal      Jadwal @relation(fields: [id_jadwal], references: [id_jadwal], onDelete: Cascade)
  jam         Jam    @relation(fields: [id_jam], references: [id_jam], onDelete: Cascade)

  @@id([id_jadwal, id_jam]) // Composite primary key
  @@map("jadwal_jam")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())

  @@map("sessions")
}

model Konseli {
  id_konseli    String    @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  userId        String    @unique
  nim           String    @unique @db.VarChar(9)
  jenis_kelamin String?   @db.Char(1)
  prodi         String?   @db.VarChar(8)
  tingkat       Int?      @db.SmallInt
  tanggal_lahir DateTime? @db.Date
  no_hp         String?   @db.VarChar(15)
  kelas         String?   @db.VarChar(25)
  
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  pengajuans Pengajuan[] @relation("KonseliPengajuan")
  konselings Konseling[] // Relasi dengan Konseling

  @@map("konselis")
}

model Pengajuan {
  id_pengajuan String     @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  id_konseli   String
  id_konselor  String?
  tanggal_1    DateTime?  @db.Date
  jam_1        String     @db.VarChar(12)
  tanggal_2    DateTime?  @db.Date
  jam_2        String?    @db.VarChar(12)
  jk_konselor  String     @db.Char(1)
  pengaju      String     @db.VarChar(8)
  ditemani     Boolean
  status       String     @db.VarChar(20)

  konseli    Konseli     @relation("KonseliPengajuan", fields: [id_konseli], references: [id_konseli], onDelete: Cascade)
  konselor   Konselor?   @relation("KonselorPengajuan", fields: [id_konselor], references: [id_konselor], onDelete: Cascade)
  konselings Konseling[]

  @@map("pengajuans")
}

model Konseling {
  id_konseling  String   @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  id_pengajuan  String
  id_konseli    String
  id_konselor_1 String
  id_konselor_2 String?
  id_laporan    String?
  jadwal        DateTime
  ruangan       String   @db.VarChar(50)
  rujukan       String?  @db.VarChar(255)
  status        String   @db.VarChar(20)

  pengajuan       Pengajuan   @relation(fields: [id_pengajuan], references: [id_pengajuan], onDelete: Cascade)
  konseli         Konseli     @relation(fields: [id_konseli], references: [id_konseli], onDelete: Cascade)
  konselor1       Konselor    @relation("konselor1", fields: [id_konselor_1], references: [id_konselor], onDelete: Cascade)
  konselor2       Konselor?   @relation("konselor2", fields: [id_konselor_2], references: [id_konselor], onDelete: Cascade)
  laporan         Laporan?    @relation("KonselingToLaporan")

  @@map("konselings")
}

model Laporan {
  id_laporan    String    @id @default(dbgenerated("SUBSTRING(MD5(RANDOM()::text), 1, 10)")) @db.VarChar(10)
  id_konseling  String    @unique // Menambahkan @unique untuk memastikan relasi one-to-one
  tanggal       DateTime? @db.Date
  topik         String    @db.VarChar(15)
  hasil         String
  solusi        String

  konseling Konseling @relation("KonselingToLaporan", fields: [id_konseling], references: [id_konseling], onDelete: Cascade)

  @@map("laporans")
}
